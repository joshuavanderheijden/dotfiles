#!/usr/bin/env bash
# https://github.com/koenhausmans/dotfiles/blob/master/scripts/bootstrap

# Enable unofficial bash strict mode
set -euo pipefail
IFS=$'\n\t'

# Get the path of the script
DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
DOTFILES="$(dirname "$DIR")"

# check for root permissions
if [ "$(whoami)" == "root" ] ; then
    fail "Please execute without root permissions!"
fi

link_file() {
	local src=$1 dst=$2

	local overwrite= backup= skip=
	local action=

	# Regular file or directory or symbolic link
	if [ -f "$dst" ] || [ -d "$dst" ] || [ -L "$dst" ]
	then
		if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
		then

			local currentSrc="$(readlink $dst)"

			# When the current source is already equeal to the new source then skip it.
			if [ "$currentSrc" == "$src" ]
			then
				skip=true;
			else
				user "File already exists: $dst ($(basename "$src")), what do you want to do?\
				\n\t [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
				read -n 1 action

				case "$action" in
				    o )
					overwrite=true;;
				    O )
					overwrite_all=true;;
				    b )
					backup=true;;
				    B )
					backup_all=true;;
				    s )
					skip=true;;
				    S )
					skip_all=true;;
				    * )
					;;
				esac
			fi

			overwrite=${overwrite:-$overwrite_all}
			backup=${backup:-$backup_all}
			skip=${skip:-$skip_all}

			if [ "$overwrite" == "true" ]
			then
			    rm -rf "$dst"
			    success "\e[31mRemoved\e[0m $dst"
			fi

			if [ "$backup" == "true" ]
			then
			    mv "$dst" "${dst}.backup"
			    success "\e[95mMoved\e[0m $dst to ${dst}.backup"
			fi

			if [ "$skip" == "true" ]
			then
			    success "\e[33mSkipped\e[0m $src"
			fi
		fi
	fi
		
	if [ "$skip" != "true" ]  # "false" or empty
	then
		ln -s $src $dst
		success "\e[32mLinked\e[0m $src to $dst"
	fi
}

install_dotfiles() {
	info 'installing dotfiles'

	local overwrite_all=false backup_all=false skip_all=false

	for src in $(find -H "$DOTFILES" -maxdepth 2 -name '*.symlink' ! -path '*.git*')
	do 
		dst="$HOME/.$(basename "${src%.*}")"
		link_file "$src" "$dst" 
	done
}

info() {
	printf "\r [ .. ] $1\n"
}

success() {
	printf "\r [ \033[00;32mOK\033[0m ] $1\n"
}

user () {
	printf "\r [ ?? ] $1\n"
}

fail () {
	printf "\r [ \033[0;31mFAIL\033[0m ] $1\n"
	echo ''
	exit
}

install_dotfiles
