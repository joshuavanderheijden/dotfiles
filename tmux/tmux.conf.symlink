# ___________                  _________                _____.__
# \__    ___/____  __ _____  __\_   ___ \  ____   _____/ ____\__| ____
#   |    | /     \|  |  \  \/  /    \  \/ /  _ \ /    \   __\|  |/ ___\
#   |    ||  Y Y  \  |  />    <\     \___(  <_> )   |  \  |  |  / /_/  >
#   |____||__|_|  /____//__/\_ \\______  /\____/|___|  /__|  |__\___  /
#               \/            \/       \/            \/        /_____/
# KEY CHANGES {{{

# Remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# New window
bind c new-window -c '#{pane_current_path}' 

# Split panes horizontal or vertical
bind \\ split-window -h -c '#{pane_current_path}'
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
bind _ split-window -v -c '#{pane_current_path}'
unbind '"'
unbind %

# Resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind -r h resize-pane -L 1
bind -r j resize-pane -D 1
bind -r k resize-pane -U 1
bind -r l resize-pane -R 1

# Reload config file
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# Switch panes using Alt-arrow without prefix
#bind -n j-left select-pane -L
#bind -n M-right select-pane -R
#bind -n j-up select-pane -U
#bind -n M-Down select-pane -D

# Smart pane switching with awareness of vim splits.
# Source: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Mouse mode
bind m set -g mouse \; display-message 'Mouse-Mode: [#{?mouse,ON,OFF}]'

# END }}}
# SET OPTIONS {{{

# Address vim mode switching delay
set -s escape-time 0

# Don't rename windows automatically, rename window names using the , key
set-option -g allow-rename off

# History 
set -g history-limit 10000

# Message display in miliseconds
set -g display-time 3000

# Use VI keybindings for tmux commandline:
set -g status-keys vi

# Copy mode
setw -g mode-keys vi

# Mouse support
set -g mouse off

# Set first window to index 1 to map to the keyboard layout
set-option -g base-index 1
set-window-option -g pane-base-index 1
set -g renumber-windows on

# END }}}
# DESIGN CHANGES {{{

# Theme colors
THEME=colour31
BACK=colour234

# Set the default TERM
#set -g default-terminal "xterm-256color"
set -g default-terminal "screen-256color"

# Enable RGB colour if running xterm(1) - TrueColors
#set-option -sa terminal-overrides "xterm*:Tc"
set-option -sa terminal-overrides "screen*:Tc"

# Window inactive/active style
set -g window-style bg=${BACK}
set -g window-active-style bg=${BACK}

# Message
set -g message-style bg=${THEME},fg=colour233,bold
set -g message-command-style fg=blue,bg=black

# Mode
setw -g mode-style bg=${THEME},fg=white,bold

# Pane
set -g pane-border-style bg=${BACK},fg=colour236
set -g pane-active-border-style fg=${THEME},bg=${BACK}

# Activity
setw -g window-status-activity-style bg=colour237,fg=colour109,none

# Bell
setw -g window-status-bell-style fg=colour255,bg=colour1,bold

# Status bar - Settings
set -g status on
set -g status-interval 30
set -g status-justify centre
set -g status-position bottom
set -g status-bg colour236

# Status bar - Centre
setw -g window-status-style fg=colour255,bg=colour236,none
setw -g window-status-format "[#I]#W"
setw -g window-status-current-style fg=colour255,bg=${THEME},bold
setw -g window-status-current-format " [#I]#W "

# Status bar - Left
set -g status-left-length 20
set -g status-left-style fg=colour232,bg=colour255,bold
set -g status-left ' #S '

# Status bar - Right
set -g status-right-length 50
set -g status-right-style fg=colour232,bold
set -g status-right ' #[bg=colour245] %V | %Y-%m-%d | %H:%M | #(bash dotfiles/bin/show_battery_percentage.sh)'

# END }}}
